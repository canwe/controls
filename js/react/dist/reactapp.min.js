"use strict";window.XForms=window.XForms||{},window.XForms.React={},window.XForms.React.Control=React.createClass({displayName:"Control",getInitialState:function(){return this.props.model},changeState:function(a){this.setState(a)},componentWillMount:function(){{var a=this;({name:a.state.name,func:function(b){a.setState(b)}})}},render:function(){var a=this.state,b=this,c=React.addons.classSet({xcontrol:!0,hide:!a.display,highlightedcontrol:a.highlight,disable:!a.enabled}),d=React.addons.classSet({hide:!a.message,"btn btn-danger":!0}),e=React.addons.classSet({hide:!a.debug}),f=React.addons.cloneWithProps(React.Children.only(this.props.children),{model:this.state,changeState:this.changeState,display:{value:a.visible,requestChange:function(a){b.changeState("visible",a)}}});return React.DOM.div({className:c},React.DOM.button({className:d},a.message),React.DOM.br(null),f,React.DOM.div({className:e},React.DOM.h4(null,"Debug"),React.DOM.pre(null,JSON.stringify(a))))}}),window.XForms.React.CheckboxControl=React.createClass({displayName:"CheckboxControl",render:function(){var a=this.props.changeState,b=this.props.model,c={value:b._value,requestChange:function(b){a({_value:b})}};return React.DOM.div(null,b.name,React.DOM.input({type:"checkbox",checkedLink:c}),React.DOM.pre(null,JSON.stringify(b._value)))}}),window.XForms.React.GridControl=React.createClass({displayName:"GridControl",render:function(){return React.DOM.div(null,"GridControl: ",JSON.stringify(this.props.model))}}),window.XForms.React.ListControl=React.createClass({displayName:"ListControl",getInitialState:function(){return{addButtonDisabled:!0}},remove:function(a){var b=this.props.model.values,c=b.indexOf(a);-1!==c&&b.splice(c,1),this.props.changeState({values:b,message:""}),this.refs.addText.getDOMNode().focus()},add:function(){var a=this.refs.addText.getDOMNode(),b=a.value.trim();if(!b)return this.props.changeState({enabled:!1}),void a.focus();var c=this.props.model.values,d=c.some(function(a){return a===b});return d?(this.props.changeState({message:"'"+b+"'' is already in the list"}),void a.focus()):(c.push(b),this.props.changeState({values:c,message:""}),a.value="",a.focus(),void this.enableAddButton())},enableAddButton:function(){var a=this.refs.addText.getDOMNode().value,b=a?!1:!0;this.setState({addButtonDisabled:b})},render:function(){var a=this,b=this.props.model,c=React.addons.classSet({required:!0,hide:b.required}),d=React.addons.classSet({"btn btn-info":!0,hide:!b.enabled&&!b.readonly}),e=React.addons.classSet({"btn btn-mini":!0,hide:!b.enabled}),f=b.values.map(function(b,c){var d=a.remove.bind(a,b);return React.DOM.li({key:c},b,React.DOM.button({className:e,onClick:d},"X"))});return React.DOM.div(null,React.DOM.h4(null,b.name," ",React.DOM.span({className:c},"*")),React.DOM.div({className:"input-append"},React.DOM.input({type:"text",disabled:!b.enabled,onKeyUp:this.enableAddButton,ref:"addText"}),React.DOM.button({onClick:this.add,disabled:this.state.addButtonDisabled,className:d},"Add")),React.DOM.ul(null,f),React.DOM.pre(null,JSON.stringify(b.values)))}}),window.XForms.React.MultiSelectControl=React.createClass({displayName:"MultiSelectControl",onChecked:function(a,b){var c=this.props.model.values;c[a].checked=!b.checked,this.props.changeState({values:c,message:""})},render:function(){var a=this.props.model,b="",c="columns"===a.style?a.columncount:1;return b="compact"===a.style?window.XForms.React.MultiSelectCompact({values:a.values,oncheck:this.onChecked}):window.XForms.React.MultiSelectColumns({values:a.values,oncheck:this.onChecked,columncount:c}),React.DOM.div(null,React.DOM.h4(null,a.label,React.DOM.span({"class":"required"},"*")),React.DOM.fieldset(null,b),React.DOM.pre(null,JSON.stringify(a.values)))}}),window.XForms.React.MultiSelectCompact=React.createClass({displayName:"MultiSelectCompact",oncheck:function(a,b){this.props.oncheck(a,b)},render:function(){var a=this,b=this.props.values,c=b.map(function(b,c){var d=a.oncheck.bind(a,c,b);return React.DOM.span({key:c},React.DOM.input({type:"checkbox",checked:b.checked,onChange:d}),b.value)});return React.DOM.div(null,c)}}),window.XForms.React.MultiSelectColumns=React.createClass({displayName:"MultiSelectColumns",oncheck:function(a,b){this.props.oncheck(a,b)},render:function(){var a=this,b=this.props.values,c=this.props.columncount,d=React.addons.classSet({column1:1===c,column2:2===c,column3:3===c,column4:4===c,column5:5===c,column6:6===c,column7:7===c,column8:8===c,column9:9===c,column10:10===c}),e=b.map(function(b,c){var d=a.oncheck.bind(a,c,b);return React.DOM.div({key:c},React.DOM.input({type:"checkbox",checked:b.checked,onChange:d})," ",b.value)});return React.DOM.div({className:d},e)}}),window.XForms.React.Application=React.createClass({displayName:"Application",render:function(){console.log(this.props);var a=this.props.data.controldata.map(function(a,b){var c=window.XForms.React[a.type];return c?window.XForms.React.Control({key:b,model:a},c(null)):void 0});return React.DOM.div(null,a)}}),React.renderComponent(XForms.React.Application({data:window.XForms.FormData}),document.getElementById("app"));
//# sourceMappingURL=reactapp.min.js.map